/******************************************/
/* USER DESCRIPTION SECTION 			  */
/* LIVY456				   			  */
/* FINAL PROJECT 		   	  			  */
/* PROGRAM 12							  */
/* FEBRUARY 10, 2020		   			  */
/******************************************/
/**********************************************/
/* THIS IS A PROGRAM TO HAVE USER SCHEDULE	  */
/* A SKI TRIP. USER WILL HAVE TO INPUT NAME,  */
/* DATE, GROUP ID, AND NUMBER OF PEOPLE IN	  */
/* THEIR GROUP. IT WILL CALCULATE THE COST	  */
/* AND THE NUMBER OF BUSES NEEDED. IF NOT 	  */
/* ENOUGH SEATS ON THE BUS, REFUNDS WILL BE   */
/* GIVEN. USER WILL BE ALLOWED TO REMOVE, ADD,*/ 
/* OR MODIFY MEMBERS OF THEIR SKI TRIP. 	  */
/**********************************************/

/******************/
/* IMPORT SECTION */
/******************/
import javax.swing.*;					// IMPORTS SWING
import java.util.*;						// IMPORTS ARRAYLIST
import java.io.	File;					// IMPORTS FILE
import java.io.FileNotFoundException;	// IMPORTS FILE NOT FOUND EXCEPTION TO HANDLE ERRORS

public class Bus_Main 
{	
	/*****************/
	/* FINAL SECTION */
	/*****************/
	final static String message1 = "Do you want include customer information from " + "\n" +
								   "a pre-existing file?";
	final static String heading1 = "Confirm Customer Input from a File";
	
	public static void main(String[]args)
	{
		/********************/
		/* VARIABLE SECTION */
		/********************/
		int confirm;				// INTEGER ANSWER TO CONFIRM READING IN FILE INTO PROGRAM
		File file;					// DECLARES A NEW FILE CLASS
		ArrayList<String> flList;	// AN ARRAYLIST FOR ALL CUSTOMERS ON THE FILE
		Scanner in;					// USED TO READ IN THE FILE TO PROGRAM
		
		/*************************/
		/* INSTANTIATION SECTION */
		/*************************/
		flList = new ArrayList<String>();		// INSTANTIATES ARRAYLIST 
		
		/*******************************/
		/* PROGRAM DESCRIPTION SECTION */
		/*******************************/
		programDescription();	// CALL TO PROGRAM DESCRIPTION
		
		confirm = confirmFile(message1, heading1);	// CALL TO CONFIRM FILE
		
		/*************************************************************/
		/* IF STATEMENT TO CHRCK IF USER WANTS FILE INFORMATION READ */
		/*************************************************************/
		if(confirm == 0)
		{
			/***************************************************************/
			/* TRIES TO INSTANTIATE FILE AND SCANNER TO READ CUSTOMER DATA */
			/***************************************************************/
			try 
			{
				file  = new File("E:\\Bus Program\\src\\customerData");	// INSTANTIATES FILE
				in = new Scanner(file);									// INSTANITATES SCANNER

				/************************************************************/
				/* WHILE LOOP THAT GOES THROUGH EVERY LINE IN THE TEXT FILE */
				/************************************************************/
				while(in.hasNextLine())
				{
					String data = in.nextLine();	// READS IN THE NEXT LINE OF CUSTOMER DATA
					flList.add(data);				// ADDS CUSTOMER DATA FROM TEXT FILE
				}
				in.close();		// CLOSES THE FILE
			}
			
			/******************************************************************/
			/* CATCHES THE PROGRAM IF THERE IS NO PROGRAM SO IT DOES NOT BOMB */
			/******************************************************************/
			catch (FileNotFoundException error)
			{
				System.out.println("Error Occured");
				error.printStackTrace();	// CALL TO PRINT STACK TRACE
			}
			
			
			
			
			
			// DEBUGGING STATEMENT
			String str = "";
			for(int i =0; i<flList.size();i++)
			{
				str+= ""+ flList.get(i)+"\n";
			}
			System.out.println(str);
			
			// END OF DEBUGGING STATEMENT
			
			
			
			
			
			new BusGUI(flList);	// INSTANTIATES BUS GUI
		}
		
		/******************************************************************/
		/* ELSE IF STATEMENT TO CHRCK IF USER WANTS FILE INFORMATION READ */
		/******************************************************************/
		else if (confirm == 1)
		{
			new BusGUI();	// INSTANTIATES BUS GUI
		}
	}
	/******************************************************************************/
	/* 								FUNCTION SECTION 							  */
	/******************************************************************************/	
	public static int confirmFile(String str, String hdstr)
	/************************************************/
	/* PRECONDITION - NEEDS CONFIRM DIALOG BOX		*/
	/* POSTCONDITION - CREATES WINDOW TO CONFIRM IF	*/
	/* 				   USER WANTS TO CONFIRM ACTION	*/
	/************************************************/
	{
		/********************/
		/* VARIABLE SECTION */
		/********************/
		int num;			// INTEGER ANSWER TO READ IN FILE INTO PROGRAM
		
		/*******************************/
		/* MAKES CONFIRM DIALOG WINDOW */
		/*******************************/
		num = JOptionPane.showConfirmDialog(
				null,
				str,
				hdstr,
				JOptionPane.YES_NO_OPTION,
				JOptionPane.QUESTION_MESSAGE);
		
		/******************/
		/* RETURN SECTION */
		/******************/
		return num;			// RETURNS NUM
	}
	
	public static void programDescription()
	/************************************************/
	/* PRECONDITION - NEEDS PROGRAM DESCRIPTION		*/
	/* POSTCONDITION - CREATES WINDOW TO DESCRIBE	*/
	/* 					WHAT THE PROGRAM DOES 		*/
	/************************************************/
	{
		/************************************/
		/* MAKES PROGRAM DESCRIPTION WINDOW */
		/************************************/
		JOptionPane.showMessageDialog(
				null,
				"This program is a program to schedule a ski trip." + "\n" +
				"The user will input the name of their ski group, the" + "\n" +
				"date, the group ID, and the number of people going in their group." + "\n" +
				"The program will output the name, date, group ID, number of" + "\n" +
				"people, cost or refunds, and number of buses sorted. The customer will" + "\n" +
				"allowed to remove, add, or modify their input information.",
				"Program Description for Final Project",
				JOptionPane.INFORMATION_MESSAGE);
	}
}
